# Default values for silence-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates

## Provide a name in place of silence-operator for `app:` labels
##
nameOverride: ""

## Override the deployment namespace
##
namespaceOverride: ""

image:
  registry: gsoci.azurecr.io
  name: "giantswarm/silence-operator"
  tag: ""

# TODO improve this for better user experience
alertmanagerAddress: ""
alertmanagerAuthentication: false
# -- Default alertmanager tenant (DEPRECATED: use tenancy.defaultTenant instead)
alertmanagerDefaultTenant: ""

# Tenancy configuration for multi-tenant Alertmanager setups
tenancy:
  # Whether to enable tenant extraction from silence resources
  enabled: false
  # Label key to extract tenant information from. If the label is not found on a silence resource,
  # the defaultTenant value will be used
  labelKey: "observability.giantswarm.io/tenant"
  # Default tenant to use when no tenant label is found
  defaultTenant: ""

# Label selector to filter Silence custom resources.
# If empty, all Silence CRs are processed.
# Example: 'environment=production,tier=frontend'
silenceSelector: ""

# Label selector to restrict which namespaces the v2 controller watches.
# If empty, the v2 controller will watch all namespaces.
# Example: 'environment=production' or 'team=platform,tier=monitoring'
namespaceSelector: ""

# -- Configures the pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65534
  seccompProfile:
    type: RuntimeDefault

# Configures PodMonitor for the Prometheus operator
podMonitor:
  # Whether to enable the PodMonitor CR
  enabled: true

# -- Configures the container security context
containerSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  seccompProfile:
    type: RuntimeDefault
  capabilities:
    drop:
      - ALL

# -- Configures the network policy
networkPolicy:
  # -- Whether to create a network policy for the silence operator
  enabled: true
  # -- The network policy flavor to use. Can be either kubernetes or cilium.
  flavor: "kubernetes"

resources:
  requests:
    cpu: 50m
    memory: 50Mi
  limits:
    cpu: 50m
    memory: 100Mi

# -- Affinity configuration for pod scheduling
# Since this operator runs as a single instance, anti-affinity is disabled by default
affinity: {}

# -- Node affinity configuration for pod scheduling
# Example:
# nodeAffinity:
#   requiredDuringSchedulingIgnoredDuringExecution:
#     nodeSelectorTerms:
#     - matchExpressions:
#       - key: kubernetes.io/arch
#         operator: In
#         values: ["amd64", "arm64"]
nodeAffinity: {}

# -- Node selector for pod scheduling
nodeSelector: {}

# -- Tolerations for pod scheduling
tolerations: []

# -- Priority class name for pod scheduling
# Example: system-cluster-critical, system-node-critical
priorityClassName: ""

# -- Configures liveness probe
livenessProbe:
  httpGet:
    path: /healthz
    port: http-healthz
  initialDelaySeconds: 30
  timeoutSeconds: 1
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3

# -- Configures readiness probe
readinessProbe:
  httpGet:
    path: /readyz
    port: http-healthz
  initialDelaySeconds: 5
  timeoutSeconds: 1
  periodSeconds: 5
  successThreshold: 1
  failureThreshold: 3

# -- Restart policy for the pod (Always for single-instance reliability)
restartPolicy: Always

rbac:
  create: true

crds:
  # Whether to install the Silence CRD with this chart.
  install: true
